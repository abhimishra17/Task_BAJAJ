import { useState } from 'react';
import Head from 'next/head'; 
import styles from '../styles/Home.module.css';


export default function Home() {
  const [inputValue, setInputValue] = useState('');
  const [response, setResponse] = useState(null);
  const [error, setError] = useState('');
  const [selectedFilters, setSelectedFilters] = useState([]);

  const handleInputChange = (e) => {
    setInputValue(e.target.value);
  };

  const handleSubmit = async () => {
    try {
      const parsedInput = JSON.parse(inputValue);

      if (!parsedInput.data || !Array.isArray(parsedInput.data)) {
        setError('Invalid input: "data" should be an array.');
        setResponse(null);
        return;
      }

      setError('');

      const res = await fetch('https://your-backend-api-url/api/bfhl', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(parsedInput),
      });

      const data = await res.json();
      setResponse(data);
    } catch (e) {
      setError('Invalid JSON format.');
      setResponse(null);
    }
  };

  const handleFilterChange = (e) => {
    const { options } = e.target;
    const selected = [];
    for (const option of options) {
      if (option.selected) {
        selected.push(option.value);
      }
    }
    setSelectedFilters(selected);
  };

  const renderFilteredResponse = () => {
    if (!response) return null;

    const { numbers, alphabets, highest_alphabet } = response;

    return (
      <div>
        {selectedFilters.includes('Numbers') && (
          <div>
            <h3>Numbers:</h3>
            <p>{JSON.stringify(numbers)}</p>
          </div>
        )}
        {selectedFilters.includes('Alphabets') && (
          <div>
            <h3>Alphabets:</h3>
            <p>{JSON.stringify(alphabets)}</p>
          </div>
        )}
        {selectedFilters.includes('Highest Alphabet') && (
          <div>
            <h3>Highest Alphabet:</h3>
            <p>{JSON.stringify(highest_alphabet)}</p>
          </div>
        )}
      </div>
    );
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>ABCD123</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>JSON Input and Filtered Response</h1>

        <textarea
          value={inputValue}
          onChange={handleInputChange}
          placeholder='Enter JSON here... Example: { "data": ["A","C","z"] }'
          rows="5"
          cols="40"
        />

        <button onClick={handleSubmit}>Submit</button>

        {error && <p className={styles.error}>{error}</p>}

        {response && (
          <div>
            <h2>Filter Response:</h2>
            <select multiple onChange={handleFilterChange}>
              <option value="Numbers">Numbers</option>
              <option value="Alphabets">Alphabets</option>
              <option value="Highest Alphabet">Highest Alphabet</option>
            </select>

            {renderFilteredResponse()}
          </div>
        )}
      </main>
    </div>
  );
}
